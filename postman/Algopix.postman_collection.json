{
	"info": {
		"_postman_id": "1e84d30b-d3fc-4573-b66e-d8dd0d2929bb",
		"name": "Cluster",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Details",
					"item": [
						{
							"name": "Request products details",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v3/async/products/details?productId=&productIdType=&markets=&resources=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v3",
										"async",
										"products",
										"details"
									],
									"query": [
										{
											"key": "productId",
											"value": "",
											"description": "(Required) A product identifier to send through the API. Cluster supports GTIN in 12 or 13 digit format, ASIN and AID (Cluster identifier)."
										},
										{
											"key": "productIdType",
											"value": "",
											"description": "The type of the product id. Currently supports ASIN, UPC, EAN and AID (Cluster Identifier)."
										},
										{
											"key": "markets",
											"value": "",
											"description": "Comma-delimited market list to search for market specific data. In this version,Cluster supports Amazon_US and eBay_US markets."
										},
										{
											"key": "resources",
											"value": "",
											"description": "Comma-delimited resource list to search for specific product. In this version,Cluster supports TAXONOMY and MARKETPLACE_DATA only. The Taxonomy is available for the markets that were being asked for, if available."
										}
									]
								},
								"description": "This is an asynchronous API endpoint. This endpoint searches available attributes data in specified products by GTIN, ASIN or AID. The results may be retrieved from \"Products details results\" endpoint."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Products details results",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v3/async/products/details/results",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v3",
										"async",
										"products",
										"details",
										"results"
									]
								},
								"description": "This is an asynchronous API endpoint. This endpoint retrieves the results of the asynchronous search from the endpoint \"Request products details\"."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Collection",
					"item": [
						{
							"name": "Get products collection",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v4/products?local=&brandId=&brandName=&categories=&excludeCategories=&maxItems=&contextKey=&pageNumber=&resources=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v4",
										"products"
									],
									"query": [
										{
											"key": "local",
											"value": "",
											"description": "the local of the product."
										},
										{
											"key": "brandId",
											"value": "",
											"description": "Cluster unique Brand Id (see \"Get Brands by brand name\" endpoint)."
										},
										{
											"key": "brandName",
											"value": "",
											"description": "brand name"
										},
										{
											"key": "categories",
											"value": "",
											"description": "Comma-delimited list of category ids."
										},
										{
											"key": "excludeCategories",
											"value": "",
											"description": "Comma-delimited list of category ids to exclude."
										},
										{
											"key": "maxItems",
											"value": "",
											"description": "Set a max number of items to return in the collection."
										},
										{
											"key": "contextKey",
											"value": "",
											"description": "A key which was returned when making the initial request for products. This key is used to retrieve the following results pages."
										},
										{
											"key": "pageNumber",
											"value": "",
											"description": "The page number of the results to retreive. This parameter must be used in tandem with contextKey"
										},
										{
											"key": "resources",
											"value": "",
											"description": "comma delimited resource list to include in the response."
										}
									]
								},
								"description": "This is a synchronous API endpoint. This endpoint returns a product list according to the brand and marketplaces provided."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Get products collection summary",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v4/products/summary?local=&brandId=&brandName=&categories=&excludeCategories=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v4",
										"products",
										"summary"
									],
									"query": [
										{
											"key": "local",
											"value": "",
											"description": "The local of the product."
										},
										{
											"key": "brandId",
											"value": "",
											"description": "Cluster unique Brand Id (see \"Get Brands by brand name\" endpoint)."
										},
										{
											"key": "brandName",
											"value": "",
											"description": "The name of the brand"
										},
										{
											"key": "categories",
											"value": "",
											"description": "List of comma delimited \"amazon category ids\" by locale."
										},
										{
											"key": "excludeCategories",
											"value": "",
											"description": "List of comma delimited \"amazon category ids\" by locale to exclude."
										}
									]
								},
								"description": "This is a synchronous API endpoint. This endpoint returns summary of a product list according to the brand and marketplaces provided."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Create a products report",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v4/products/reports?local=&brandId=&brandName=&categories=&excludeCategories=&maxItems=&additionalFields=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v4",
										"products",
										"reports"
									],
									"query": [
										{
											"key": "local",
											"value": "",
											"description": "The local of the product."
										},
										{
											"key": "brandId",
											"value": "",
											"description": "Unique identifier for a brand."
										},
										{
											"key": "brandName",
											"value": "",
											"description": "brand name"
										},
										{
											"key": "categories",
											"value": "",
											"description": "List of comma delimited \"amazon category ids\" by locale."
										},
										{
											"key": "excludeCategories",
											"value": "",
											"description": "List of comma delimited \"amazon category ids\" by locale to exclude."
										},
										{
											"key": "maxItems",
											"value": "",
											"description": "Set a max number of items to return in the collection."
										},
										{
											"key": "additionalFields",
											"value": "",
											"description": "Comma-delimited advanced market Fields to add to the reports. You must be authirzied for each Field."
										}
									]
								},
								"description": "Request creating a products report. This endpoint triggers the background creation of a report. Use the \"Get report status\" endpoint to get the status of the report generation. Use the \"Get ready report\" endpoint to download the report."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Get report status",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v4/products/reports/status?reportId=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v4",
										"products",
										"reports",
										"status"
									],
									"query": [
										{
											"key": "reportId",
											"value": "",
											"description": "Report identifier"
										}
									]
								},
								"description": "Get all report status."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Get ready report",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v4/products/reports/:reportId",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v4",
										"products",
										"reports",
										":reportId"
									],
									"variable": [
										{
											"key": "reportId",
											"value": "",
											"description": "(Required)"
										}
									]
								},
								"description": "This endpoint returns collection report file."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Analysis",
					"item": [
						{
							"name": "Request products analysis",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v3/async/products/analysis?keywords=&markets=&minItemPrice=&maxItemPrice=&currencyCode=&idType=&productCondition=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v3",
										"async",
										"products",
										"analysis"
									],
									"query": [
										{
											"key": "keywords",
											"value": "",
											"description": "(Required) Item keywords to search by, alternatively pass EAN, UPC, or ASIN for a more precise search. Populate idType according to the item passed here."
										},
										{
											"key": "markets",
											"value": "",
											"description": "Comma-delimited market list to search. Specify up to four markets (default is amazon_us). Currently available markets include Amazon, eBay, and Walmart (see enum list for supported options)."
										},
										{
											"key": "minItemPrice",
											"value": "",
											"description": "Price which may be used during the item identification process to filter items which cost more than the minimum price. Using this optional parameter may affect performance. Relevant only when keywords parameter contains a keyword query and not a UPC, EAN or ASIN."
										},
										{
											"key": "maxItemPrice",
											"value": "",
											"description": "Price which may be used during the item identification process to filter items which cost less than the specified maximum price. Using this optional parameter may affect performance. Relevant only when keyword parameter contains keywords query and not a UPC, EAN or ASIN."
										},
										{
											"key": "currencyCode",
											"value": "",
											"description": "The currency code of the specified minItemPrice & maxItemPrice parameters, this is a required parameter if either minItemPrice and/or maxItemPrice parameters are used. the currencyCode parameters should comply with ISO 4217 currency codes."
										},
										{
											"key": "idType",
											"value": "",
											"description": "Improves identification accuracy of item keywords. If not specified, this will be automatically determined."
										},
										{
											"key": "productCondition",
											"value": "",
											"description": "The item condition which is used to filter results."
										}
									]
								},
								"description": "This is an asynchronous API endpoint. This endpoint identifies a product and returns its product analysis information in selected markets. The results may be retrieved from \"Products analysis results\"."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Products analysis results",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v3/async/products/analysis/results",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v3",
										"async",
										"products",
										"analysis",
										"results"
									]
								},
								"description": "This is an asynchronous API endpoint. This endpoint retrieves the results of the asynchronous search from the endpoint \"Request products analysis\"."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Matching",
					"item": [
						{
							"name": "Request products matching",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v3/async/products/matches?keywords=&color=&brand=&googleGbCategoryId=&amazonSearchIndex=&amazonCategoryId=&minPrice=&maxPrice=&currencyCode=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v3",
										"async",
										"products",
										"matches"
									],
									"query": [
										{
											"key": "keywords",
											"value": "",
											"description": "(Required) Item keywords used to search for products."
										},
										{
											"key": "color",
											"value": "",
											"description": "Search products by color. Products with matching color will receive a higher score."
										},
										{
											"key": "brand",
											"value": "",
											"description": "Search products by Brand. Products with matching brand will receive a higher score."
										},
										{
											"key": "googleGbCategoryId",
											"value": "",
											"description": "Search products by google product category. Products with matching categories recieve a higher score. Id of a google product category as described [here](https://support.google.com/merchants/answer/6324436?hl=en).  \n For an extensive list of the available categories see [here](https://www.google.com/basepages/producttype/taxonomy-with-ids.en-GB.txt)"
										},
										{
											"key": "amazonSearchIndex",
											"value": "",
											"description": "The product category to search. For more information and an extensive list of the possible values, see [here](https://docs.google.com/spreadsheets/d/1h9Pio_f0fnjeEuOEqS-fEkuBgejiwsVshYhJUv0p0so/edit?usp=sharing)"
										},
										{
											"key": "amazonCategoryId",
											"value": "",
											"description": "Search products by amazon browse node id. Products associated with the amazon browse node recieve a higher score. Browse nodes are positive integers identifying a product category.  \n list is availible here [here](https://algopix.com/taxonomy/amazon_browse_node_info_US.txt)  \n Specifying a browse node requires a `searchindex` to be set. Browse node work with every `searchindex`, **except for** _All_ and _Blended_."
										},
										{
											"key": "minPrice",
											"value": "",
											"description": "The minimum price of a products to return by the search."
										},
										{
											"key": "maxPrice",
											"value": "",
											"description": "The maximum price of a products to return by the search."
										},
										{
											"key": "currencyCode",
											"value": "",
											"description": "The currency code of the specified minPrice & maxPrice parameters. the currencyCode parameter should comply with [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency codes. Currently supported currency codes: USD, EUR, CAD. defaults to USD if not specified."
										}
									]
								},
								"description": "This is an asynchronous API endpoint. This endpoint searches retail products data, specified by keywords and other attributes. The results may be retrieved from \"Products matching results\"."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Products matching results",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v3/async/products/matches/results",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v3",
										"async",
										"products",
										"matches",
										"results"
									]
								},
								"description": "This is an asynchronous API endpoint. This endpoint retrieves the results of the search from the endpoint \"Request products matching\"."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Marketplace",
			"item": [
				{
					"name": "Listing",
					"item": [
						{
							"name": "Promotions",
							"item": [
								{
									"name": "Request products promotions",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required)",
												"key": "X-API-KEY",
												"value": ""
											},
											{
												"description": "(Required)",
												"key": "X-APP-ID",
												"value": ""
											}
										],
										"url": {
											"raw": "https://api.datacluster.com/v3/async/promotions?productId=&productIdType=&market=",
											"protocol": "https",
											"host": [
												"api",
												"datacluster",
												"com"
											],
											"path": [
												"v3",
												"async",
												"promotions"
											],
											"query": [
												{
													"key": "productId",
													"value": "",
													"description": "(Required) Currently available AID (Cluster Identifier) or ASIN. Identify which was applied in productIdType below."
												},
												{
													"key": "productIdType",
													"value": "",
													"description": "(Required) The identifier type that was parsed as the id. currently supported ASIN and AID"
												},
												{
													"key": "market",
													"value": "",
													"description": "(Required) Market to search (default is amazon_us)."
												}
											]
										},
										"description": "This is an asynchronous API endpoint. This endpoint searches promotional data in specified Amazon listings by AID or ASIN. The results may be retrieved from \"Products promotions results\"."
									},
									"response": [
										{
											"name": "StatusCode 200 example",
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
										},
										{
											"name": "StatusCode 400 example",
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 401 example",
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 403 example",
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
										},
										{
											"name": "StatusCode 429 example",
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 500 example",
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										}
									]
								},
								{
									"name": "Products promotions results",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required)",
												"key": "X-API-KEY",
												"value": ""
											},
											{
												"description": "(Required)",
												"key": "X-APP-ID",
												"value": ""
											}
										],
										"url": {
											"raw": "https://api.datacluster.com/v3/async/promotions/results",
											"protocol": "https",
											"host": [
												"api",
												"datacluster",
												"com"
											],
											"path": [
												"v3",
												"async",
												"promotions",
												"results"
											]
										},
										"description": "This is an asynchronous API endpoint. This endpoint retrieves the results of the search from the endpoint \"Request products promotions\"."
									},
									"response": [
										{
											"name": "StatusCode 200 example",
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
										},
										{
											"name": "StatusCode 400 example",
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 401 example",
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 403 example",
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
										},
										{
											"name": "StatusCode 429 example",
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 500 example",
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Buy Box Owners",
							"item": [
								{
									"name": "Request Buy Box Owners",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required)",
												"key": "X-API-KEY",
												"value": ""
											},
											{
												"description": "(Required)",
												"key": "X-APP-ID",
												"value": ""
											}
										],
										"url": {
											"raw": "https://api.datacluster.com/v3/async/sellers/buyboxowners?productId=&productIdType=&markets=&resources=",
											"protocol": "https",
											"host": [
												"api",
												"datacluster",
												"com"
											],
											"path": [
												"v3",
												"async",
												"sellers",
												"buyboxowners"
											],
											"query": [
												{
													"key": "productId",
													"value": "",
													"description": "(Required)"
												},
												{
													"key": "productIdType",
													"value": "",
													"description": "(Required) indicates the type of the Id sent under \"ids\", currently supported types are : ASIN, EBAY_ITEM_ID, WALMART_ITEM_ID, AID"
												},
												{
													"key": "markets",
													"value": "",
													"description": "(Required) Comma-delimited market list to search for item matching the given input. Up to three markets can be specified. If no value is specified, the default used is amazon_us. Currently available Markets of Amazon, eBay and Walmart"
												},
												{
													"key": "resources",
													"value": "",
													"description": "Additional data points added to the request. In this version,only SellerDetails information is being supported"
												}
											]
										},
										"description": "This is an asynchronous API endpoint. This endpoint searches info about the sellers that sell an specified item (given a specified item identifier) for a given marketplace. The results may be retrieved from \"Buy Box Owners results\"."
									},
									"response": [
										{
											"name": "StatusCode 200 example",
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
										},
										{
											"name": "StatusCode 400 example",
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 401 example",
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 403 example",
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
										},
										{
											"name": "StatusCode 429 example",
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 500 example",
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										}
									]
								},
								{
									"name": "Buy Box Owners results",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required)",
												"key": "X-API-KEY",
												"value": ""
											},
											{
												"description": "(Required)",
												"key": "X-APP-ID",
												"value": ""
											}
										],
										"url": {
											"raw": "https://api.datacluster.com/v3/async/sellers/buyboxowners/results",
											"protocol": "https",
											"host": [
												"api",
												"datacluster",
												"com"
											],
											"path": [
												"v3",
												"async",
												"sellers",
												"buyboxowners",
												"results"
											]
										},
										"description": "This is an asynchronous API endpoint. This endpoint retrieves the results of the asynchronous search from the endpoint \"Request Buy Box Owners\"."
									},
									"response": [
										{
											"name": "StatusCode 200 example",
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
										},
										{
											"name": "StatusCode 400 example",
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 401 example",
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 403 example",
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
										},
										{
											"name": "StatusCode 429 example",
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 500 example",
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Product Listings",
							"item": [
								{
									"name": "Request Products Listings",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required)",
												"key": "X-API-KEY",
												"value": ""
											},
											{
												"description": "(Required)",
												"key": "X-APP-ID",
												"value": ""
											}
										],
										"url": {
											"raw": "https://api.datacluster.com/v3/async/products/listings?productId=&productIdType=&markets=&resources=&itemCondition=",
											"protocol": "https",
											"host": [
												"api",
												"datacluster",
												"com"
											],
											"path": [
												"v3",
												"async",
												"products",
												"listings"
											],
											"query": [
												{
													"key": "productId",
													"value": "",
													"description": "(Required) The Id of the product."
												},
												{
													"key": "productIdType",
													"value": "",
													"description": "(Required) The type of the product id. Currently supports ASIN and AID (Cluster Identifier)."
												},
												{
													"key": "markets",
													"value": "",
													"description": "(Required) Comma-delimited market list to search for item matching the given input. Up to three markets can be specified. Currently available AMAZON_US."
												},
												{
													"key": "resources",
													"value": "",
													"description": "Additional data points added to the request. In this version,only SellerDetails information is being supported.\nSellerdetails contains Business Name and Address."
												},
												{
													"key": "itemCondition",
													"value": "",
													"description": "Comma-delimited list of item conditions. supported values are NEW,REFURBISHED,USED.\n</br/>When using 'itemCondition' parameter, you will be getting only the products that are matching the value selected (USED/ REFURBISHED/ NEW). Buy Box Owner will be always retrieved."
												}
											]
										},
										"description": "This is an asynchronous API endpoint. This endpoint searches info about the product listings of a specified item (given a specified item identifier) for a given marketplace. The results may be retrieved from \"Products Listings results\".\n</br/>Note: In some responses, you may see duplicate sellers. The reason is that sellers may have more than one listing for the same product (different price, different shipping etc.)"
									},
									"response": [
										{
											"name": "StatusCode 200 example",
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
										},
										{
											"name": "StatusCode 400 example",
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 401 example",
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 403 example",
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
										},
										{
											"name": "StatusCode 429 example",
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 500 example",
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										}
									]
								},
								{
									"name": "Products Listings results",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required)",
												"key": "X-API-KEY",
												"value": ""
											},
											{
												"description": "(Required)",
												"key": "X-APP-ID",
												"value": ""
											}
										],
										"url": {
											"raw": "https://api.datacluster.com/v3/async/products/listings/results",
											"protocol": "https",
											"host": [
												"api",
												"datacluster",
												"com"
											],
											"path": [
												"v3",
												"async",
												"products",
												"listings",
												"results"
											]
										},
										"description": "This is an asynchronous API endpoint. This endpoint retrieves the results of the asynchronous search from the endpoint \"Request Products Listings\"."
									},
									"response": [
										{
											"name": "StatusCode 200 example",
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
										},
										{
											"name": "StatusCode 400 example",
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 401 example",
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 403 example",
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
										},
										{
											"name": "StatusCode 429 example",
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 500 example",
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Sellers",
					"item": [
						{
							"name": "Listings",
							"item": [
								{
									"name": "Get sellers store",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required)",
												"key": "X-API-KEY",
												"value": ""
											},
											{
												"description": "(Required)",
												"key": "X-APP-ID",
												"value": ""
											}
										],
										"url": {
											"raw": "https://api.datacluster.com/v4/sellers/:sellerId/listings?market=&maxItems=&contextKey=&pageNumber=",
											"protocol": "https",
											"host": [
												"api",
												"datacluster",
												"com"
											],
											"path": [
												"v4",
												"sellers",
												":sellerId",
												"listings"
											],
											"query": [
												{
													"key": "market",
													"value": "AMAZON_US",
													"description": "(Required) The market of the store. The current supported market is AMAZON_US."
												},
												{
													"key": "daysLastUpdated",
													"value": "",
													"description": "If the seller listings last retrieval is older than the daysLastUpdated, force new data retrieval processes. When the results are ready, they can be retrieved. The minimum days allowed is 7 days. (Note, due to the granularity of the data, the process can be lengthy.) If the parameters haven׳t been sent, the data that will be retrieved is the recent updated data of the seller. The recommendation is to have the data updated for the last 30 days."
												},
												{
													"key": "resources",
													"value": "",
													"description": "Comma-delimited resource list to be included in the response.</br>If PRODUCT_DETAILS is being requested, additional attributes will be retrieved: Brand, Title, Image URL, Leaf Categories, and Root Categories. If this parameter hasn’t been sent, the data that will be retrieved for each listing is the ASIN, price, and last updated date. The last updated date refers to the update of the listing offer state in the Cluster database."
												},
												{
													"key": "responseType",
													"value": "",
													"description": "The default response format is CSV, but can also be retrieved via JSON if needed."
												},
												{
													"key": "storeListingOnly",
													"value": "",
													"description": "If only the items presented in the storefront are needed, they are discoverable via the seller storefront (not including variants)."
												}
											],
											"variable": [
												{
													"key": "sellerId",
													"value": "",
													"description": "(Required) This requires the unique identifier of the seller. A seller ID (or sometimes called merchant ID) is a publicly available ID number that identifies a storefront and the products sold on Amazon and is unique to the region. This can be sourced from the Amazon webpage as a string of numbers usually found in the products or storefront URL. (The Seller ID appears as “me=[your ID]”.) Alternatively, the seller ID can be sourced by using the \"Buy Box Owners API\""
												}
											]
										},
										"description": "This is a synchronous API endpoint. This endpoint returns a listings list with SERP ranking for the specified seller on market."
									},
									"response": [
										{
											"name": "StatusCode 200 example",
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
										},
										{
											"name": "StatusCode 400 example",
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 401 example",
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 403 example",
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
										},
										{
											"name": "StatusCode 429 example",
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										},
										{
											"name": "StatusCode 500 example",
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Category",
					"item": [
						{
							"name": "Request Products categories",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v3/async/categories/products?browseNodeId=&googleCategoryId=&maxItems=&query=&resources=&excludeBrowseNodeIds=&searchExclusive=&fromDate=&toDate=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v3",
										"async",
										"categories",
										"products"
									],
									"query": [
										{
											"key": "browseNodeId",
											"value": "",
											"description": "(Required) A valid Amazon node id that represents an Cluster category. A full list of Amazon ids can be found [here](https://algopix.com/taxonomy/amazon_browse_node_info_US.txt). Note, either pass a broseNodeId here or a googleCategoryId below."
										},
										{
											"key": "googleCategoryId",
											"value": "",
											"description": "Google category id to search. Note, either pass a googleCategoryId here or a broseNodeId above."
										},
										{
											"key": "maxItems",
											"value": "",
											"description": "Maximum number of items to return."
										},
										{
											"key": "query",
											"value": "",
											"description": "Keywords search within a cateogry."
										},
										{
											"key": "resources",
											"value": "",
											"description": "This refines the search. PRODUCT_VARIANTS expands the search to find and analyze the variants of each product. IN_STOCK filters the in-stock items, it goes to the scrapper to get the products."
										},
										{
											"key": "excludeBrowseNodeIds",
											"value": "",
											"description": "Specify browse node ids to exclude from the search. (See browseNodeId parameter)."
										},
										{
											"key": "searchExclusive",
											"value": "",
											"description": "True/false switch. If \"search exclusive\" is enabled, only products from this category will be retrieved."
										},
										{
											"key": "fromDate",
											"value": "",
											"description": "Search for products added to the category after the stated ISO date (time defaults to beginning of the day), e.g., '2020-01-22'."
										},
										{
											"key": "toDate",
											"value": "",
											"description": "Search for products added to the category before the ISO date (time defaults to end of day), e.g., '2020-01-22'."
										}
									]
								},
								"description": "This is an asynchronous API endpoint. This endpoint return products that belong to the specified category (as specified by browseNodeId or googleCategoryId). Currently available only for Amazon US market. for The results may be retrieved from \"Products categories results\"."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Products categories results",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v3/async/categories/products/results",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v3",
										"async",
										"categories",
										"products",
										"results"
									]
								},
								"description": "This is an asynchronous API endpoint. This endpoint retrieves the results for the category analysis search from the endpoint \"Request Products categories\"."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Oragnic ranking",
					"item": [
						{
							"name": "Get Search engine results",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v4/serp?query=&categoryId=&market=&resources=&contextKey=&pageNumber=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v4",
										"serp"
									],
									"query": [
										{
											"key": "query",
											"value": "",
											"description": "Item keywords to search by."
										},
										{
											"key": "categoryId",
											"value": "",
											"description": "Unique identifier for a category."
										},
										{
											"key": "market",
											"value": "",
											"description": "(Required) Currently only AMAZON_US market is supported"
										},
										{
											"key": "resources",
											"value": "",
											"description": "Resources is processing the results origin file in the specified format (html or image), which can be retrieved in the appropriate endpoint."
										},
										{
											"key": "contextKey",
											"value": "",
											"description": "The context key is used to retrieve the following results pages. When sending a request, for retrieve the next pages you will need to send this key which was returned when making the initial request for products."
										},
										{
											"key": "pageNumber",
											"value": "",
											"description": "The page number of the results to retreive. This parameter must be used in tandem with contextKey."
										}
									]
								},
								"description": "This is a synchronous API endpoint. This endpoint searches a product list with the SERP ranking for the specified market and search terms."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Get search engine html",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v4/serp/:pageId/html?market=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v4",
										"serp",
										":pageId",
										"html"
									],
									"query": [
										{
											"key": "market",
											"value": "",
											"description": "(Required) currently only AMAZON_US market is supported"
										}
									],
									"variable": [
										{
											"key": "pageId",
											"value": "",
											"description": "(Required) The pageId which has been retrieved through the \"Get Search engine results\" endpoint."
										}
									]
								},
								"description": "This endpoint retrieves the page's raw html results. Notice - you had to specify this resource in the \"Get Search engine results\" endpoint in order to retrieve its html."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						},
						{
							"name": "Get search engine image",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required)",
										"key": "X-API-KEY",
										"value": ""
									},
									{
										"description": "(Required)",
										"key": "X-APP-ID",
										"value": ""
									}
								],
								"url": {
									"raw": "https://api.datacluster.com/v4/serp/:pageId/image?market=",
									"protocol": "https",
									"host": [
										"api",
										"datacluster",
										"com"
									],
									"path": [
										"v4",
										"serp",
										":pageId",
										"image"
									],
									"query": [
										{
											"key": "market",
											"value": "",
											"description": "(Required) currently only AMAZON_US market is supported"
										}
									],
									"variable": [
										{
											"key": "pageId",
											"value": "",
											"description": "(Required) The pageId which has been retrieved through the \"Get Search engine results\" endpoint."
										}
									]
								},
								"description": "This endpoint retrieves an image of the page's results.  Notice - you had to specify this resource in the \"Get Search engine results\" endpoint in order to retrieve its image."
							},
							"response": [
								{
									"name": "StatusCode 200 example",
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
								},
								{
									"name": "StatusCode 400 example",
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 401 example",
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 403 example",
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
								},
								{
									"name": "StatusCode 429 example",
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								},
								{
									"name": "StatusCode 500 example",
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "JSON",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Brands",
			"item": [
				{
					"name": "Get Brands by brand name",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required)",
								"key": "X-API-KEY",
								"value": ""
							},
							{
								"description": "(Required)",
								"key": "X-APP-ID",
								"value": ""
							}
						],
						"url": {
							"raw": "https://api.datacluster.com/v4/brands?brandName=",
							"protocol": "https",
							"host": [
								"api",
								"datacluster",
								"com"
							],
							"path": [
								"v4",
								"brands"
							],
							"query": [
								{
									"key": "brandName",
									"value": "",
									"description": "The name of the brand."
								}
							]
						},
						"description": "This is a synchronous API endpoint. This endpoint retrieves brand names, ids and sub brands for the specified brand name."
					},
					"response": [
						{
							"name": "StatusCode 200 example",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
						},
						{
							"name": "StatusCode 400 example",
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
						},
						{
							"name": "StatusCode 401 example",
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
						},
						{
							"name": "StatusCode 403 example",
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
						},
						{
							"name": "StatusCode 429 example",
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
						},
						{
							"name": "StatusCode 500 example",
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
						}
					]
				},
				{
					"name": "Get Brand by brand id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required)",
								"key": "X-API-KEY",
								"value": ""
							},
							{
								"description": "(Required)",
								"key": "X-APP-ID",
								"value": ""
							}
						],
						"url": {
							"raw": "https://api.datacluster.com/v4/brands/:brandId",
							"protocol": "https",
							"host": [
								"api",
								"datacluster",
								"com"
							],
							"path": [
								"v4",
								"brands",
								":brandId"
							],
							"variable": [
								{
									"key": "brandId",
									"value": "",
									"description": "(Required) Cluster unique Brand Id (see \"Get Brands by brand name\" endpoint)."
								}
							]
						},
						"description": "This is a synchronous API endpoint. This endpoint retrieves Cluster name, and sub brands for the specified brandId."
					},
					"response": [
						{
							"name": "StatusCode 200 example",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1610532938,\n\t\"status\": \"SUCCESS\",\n\t\"statusCode\": 200,\n\t\"statusMessage\": \"Ok\",\n\t\"requestId\": \"60ff66fe-76b2-4a70-882a-3168947038ca\"\n}"
						},
						{
							"name": "StatusCode 400 example",
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 400,\n\t\"statusMessage\": \"missing keywords parameter\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
						},
						{
							"name": "StatusCode 401 example",
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 401,\n\t\"statusMessage\": \"API key ('X-API-KEY') or App ID ('X-APP-ID') is missing or invalid\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
						},
						{
							"name": "StatusCode 403 example",
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507563,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 403,\n\t\"statusMessage\": \"User Over Its Allowed Quota\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a24\"\n}"
						},
						{
							"name": "StatusCode 429 example",
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 429,\n\t\"statusMessage\": \"Too Many Requests\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
						},
						{
							"name": "StatusCode 500 example",
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "{\n\t\"timestamp\": 1628507562,\n\t\"status\": \"ERROR\",\n\t\"statusCode\": 500,\n\t\"statusMessage\": \"error\",\n\t\"requestId\": \"28ce74bc-3b34-4166-9441-15b643993a2e\"\n}"
						}
					]
				}
			]
		}
	]
}